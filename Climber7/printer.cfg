[include /home/pi/klipper_config/mainsail.cfg]

[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PG6
position_endstop: -44
position_min: -44
position_max: 263
homing_speed: 50

[dual_carriage]
axis: x
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PG13
position_endstop: 267 #313
position_min: 4
position_max: 267 #313
homing_speed: 50

[stepper_y]
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 16
rotation_distance: 40
endstop_pin: ^!PG9
position_endstop: 217
position_max: 217
homing_speed: 50

[stepper_z]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
rotation_distance: 8
endstop_pin: ^!PG10
position_endstop: 0
position_min: -3
position_max: 235
homing_speed: 3

[extruder]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 16
rotation_distance: 22.8571 #7.7108
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA2 # HE0
sensor_type: Generic 3950
sensor_pin: PF4
min_extrude_temp: 170
min_temp: 5
max_temp: 340
max_extrude_only_distance: 500.0
#control: pid
#pid_Kp: 0
#pid_Ki: 0
#pid_Kd: 0

[extruder1]
step_pin: PF9
dir_pin: !PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 22.8571 #7.7108
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PA3 # HE1
sensor_type: Generic 3950
sensor_pin: PF5
min_extrude_temp: 10
min_temp: 5
max_temp: 340
max_extrude_only_distance: 500.0
#control: pid
#pid_Kp: 0
#pid_Ki: 0
#pid_Kd: 0

[heater_bed]
heater_pin: PA1
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF3
#control: pid
#pid_Kp: 0
#pid_Ki: 0
#pid_Kd: 0
min_temp: 0
max_temp: 150

[filament_switch_sensor Extruder_Filament_Runout_Sensor]
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
pause_delay: 5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: !PG11
#   The pin on which the switch is connected. This parameter must be
#   provided.

[filament_switch_sensor Extruder1_Filament_Runout_Sensor]
pause_on_runout: True
#runout_gcode:
#insert_gcode:
switch_pin: !PG12


#########################################################################################
# [fan]

[heater_fan fan1]
pin: PA8 # FAN0

[heater_fan fan2]
pin: PD12 # FAN2

[fan_generic extruder_partfan]
pin: PE5 # FAN1

[fan_generic extruder1_partfan ]
pin: PD13 # FAN3
hardware_pwm: false

#[heater_fan fan3]
#pin: PD13 # FAN3

[screws_tilt_adjust]
screw1: 22,83
screw1_name: front left
screw2: 222,83
screw2_name: front right
screw3: 22,283
screw3_name: back left
screw4: 222,283
screw4_name: back right
speed: 100.0
screw_thread: CW-M4

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_0E003600105053424E363620-if00

[printer]
kinematics: cartesian
max_velocity: 200
max_accel: 3000
max_z_velocity: 50
max_z_accel: 100

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

# See the sample-lcd.cfg file for definitions of common LCD displays.

######################################################################
# "RepRapDiscount 128x64 Full Graphic Smart Controller" type displays
######################################################################

#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

#[output_pin beeper]
#pin: EXP1_1


######################################################################
# "RepRapDiscount 2004 Smart Controller" type displays
######################################################################

#[display]
#lcd_type: hd44780
#rs_pin: EXP1_4
#e_pin: EXP1_3
#d4_pin: EXP1_5
#d5_pin: EXP1_6
#d6_pin: EXP1_7
#d7_pin: EXP1_8
#encoder_pins: ^EXP2_3, ^EXP2_5
#click_pin: ^!EXP1_2
#kill_pin: ^!EXP2_8

#[output_pin beeper]
#pin: EXP1_1

######################################################################
#  Mini 12864Panel (with neopixel backlight leds)
######################################################################

# beeper = 1_1
# lcd_en = 1_3
# lcd_d4 = 1_5
# lcd_d6 = 1_7
# gnd = 1_9
# btn_enc = 1_2
# lcd_rs = 1_4
# lcd_d5 = 1_6
# lcd_d7 = 1_8
# +5 = 1_10

# spi_miso = 2_1
# btn_en1 = 2_3
# btn_en2 = 2_5
# spi_det = 2_7
# gnd = 2_9
# spi_sck = 2_2
# spi_cs = 2_4
# spi_mosi = 2_6
# reset = 2_8
# + 3.3 = 2_10

[display]
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
contrast: 63
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2

spi_software_miso_pin: EXP2_6 #EXP2_1
spi_software_mosi_pin: EXP2_1 #EXP2_6
spi_software_sclk_pin: EXP2_2

#[display]
#lcd_type: uc1701
#cs_pin: EXP1_5
#a0_pin: EXP1_4
##rst_pin:  # EXP1_5
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
### Some micro-controller boards may require an spi bus to be specified:
##spi_bus: spi
### Alternatively, some micro-controller boards may work with software spi:
#contrast: 63
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
#spi_software_sclk_pin: PA5

[output_pin beeper]
pin: EXP1_1

#[neopixel btt_mini12864]
#pin: EXP1_6
#chain_count: 3
#color_order: RGB
#initial_RED: 0.4
#initial_GREEN: 0.4
#initial_BLUE: 0.4

#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#    SET_LED LED=btt_mini12864 RED=0.3 GREEN=0 BLUE=0.1 INDEX=1 TRANSMIT=0
#    SET_LED LED=btt_mini12864 RED=0.3 GREEN=0 BLUE=0.1 INDEX=2 TRANSMIT=0
#    SET_LED LED=btt_mini12864 RED=0.7 GREEN=1 BLUE=0.8 INDEX=3 

######################################################################
#  BigTreeTtech TFT TouchSCreen emulated 12864 mode
######################################################################

#[display]
#lcd_type: emulated_st7920
#spi_software_miso_pin: PA6
#spi_software_mosi_pin: EXP1_3
#spi_software_sclk_pin: EXP1_5
#en_pin: EXP1_4
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2

#[output_pin beeper]
#pin: EXP1_1

########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 dual_carriage]
uart_pin: PE4
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_y]
uart_pin: PD11
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PC6
run_current: 0.650
hold_current: 0.450
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PC7
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

[tmc2209 extruder1]
uart_pin: PF2
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 999999

# macros

[gcode_macro global]
variable_xhomeposition: -44
variable_x1homeposition: 267
gcode:
  G4 ; must provide something

[gcode_macro PRINT_READY]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
	G28
    {% endif %}
    HOME
    #BED_MESH_CALIBRATE
    G1 Y2 X179 F2400
    G1 Z0.2 F720
    
[gcode_macro PRINT_PURGE]
gcode:
    # Wipe nozzzle
    {% if printer.toolhead.extruder == "extruder" %}
	G1 X{printer["gcode_macro global"].xhomeposition} Z5 F3000
    {% endif %}
   G4 S60
   G92 E0 ; reset extruder
   G1 X170 F1000
   G1 Z0.2 F720
   G1 X110 E10 F900
   G1 X50 E10 F900
   G92 E0.0
   G1 X40 Z0.15 F2000

[gcode_macro PRINT_END]
#   for the slicer ending script
gcode:
    M400
    G91 			;Relative positionning
    G1 E-1 Z0.2 F2500 		;Retract and raise Z
    G1 X10 Y10 F3000 		;Wipe out
    G90 			;Absolute positionning
    G1 X5 Y170 F2000		;Present print
    M106 S0 			;Turn-off fan
    M104 S0 			;Turn-off hotend
    M140 S0 			;Turn-off bed
    M84 X Y E 			;Disable all steppers but Z  
    
[gcode_macro M106]
# rename_existing: M906
variable_fan_speed: 0
gcode:
    SET_GCODE_VARIABLE MACRO=M106 VARIABLE=fan_speed VALUE={params.S|float / 255.0}
    SET_FAN_SPEED FAN={printer.toolhead.extruder}_partfan SPEED={params.S|float / 255.0}
    # M906 S{ params.S }	

[gcode_macro M107]
#rename_existing: M907
gcode:
    M106 S0

[gcode_macro HOME]
variable_initial_active_tool: 0
gcode:
    {% if printer.toolhead.extruder == "extruder" %}
	SET_GCODE_VARIABLE MACRO=HOME VARIABLE=initial_active_tool VALUE=0
    {% endif %}
    {% if printer.toolhead.extruder == "extruder1" %}
	SET_GCODE_VARIABLE MACRO=HOME VARIABLE=initial_active_tool VALUE=1
    {% endif %}
    T0
    G28
    RESET_TOOL

[gcode_macro RESET_TOOL]
gcode:
    T{printer["gcode_macro HOME"].initial_active_tool}

[gcode_macro CENTER]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
	G28
    {% endif %}
    G0 X110 Y110

# Helper script to park the carriage (called from T0 and T1 macros)
[gcode_macro PARK_extruder]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28 X
    {% endif %}
    SAVE_GCODE_STATE NAME=park0
    G90
    G1 X{printer["gcode_macro global"].xhomeposition}
    RESTORE_GCODE_STATE NAME=park0

# Activate the primary extruder
[gcode_macro T0]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=0
    SET_GCODE_OFFSET Y=0 X=0

[gcode_macro PARK_extruder1]
gcode:
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X{printer["gcode_macro global"].x1homeposition}
    RESTORE_GCODE_STATE NAME=park1

[gcode_macro T1]
gcode:
    PARK_{printer.toolhead.extruder}
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    SET_GCODE_OFFSET Y=0.75 X=-0.75 #15


[gcode_macro M205]
gcode:
  G4 ; must provide something

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 21.279
#*# pid_ki = 1.172
#*# pid_kd = 96.552
#*#
#*# [extruder1]
#*# control = pid
#*# pid_kp = 19.128
#*# pid_ki = 0.741
#*# pid_kd = 123.377
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 72.453
#*# pid_ki = 1.288
#*# pid_kd = 1018.875
