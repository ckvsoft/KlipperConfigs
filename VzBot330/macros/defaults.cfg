[respond]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(165) %}      #edit to your park position
    {% set y = params.Y|default(320) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    {% set e_temp = printer['gcode_macro _PRINTER_TEMP_VARIABLE'].print_temp_extruder %}
    {% set b_temp = printer['gcode_macro _PRINTER_TEMP_VARIABLE'].print_temp_bed %}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    {% set e_temp = printer['gcode_macro _PRINTER_TEMP_VARIABLE'].print_temp_extruder %}

    M104 S{ e_temp } ; set extruder temp
    {action_respond_info("Set extruder temperature to %d ..." % e_temp)}

    {% for count in range(1200) %}
        _templedcolor_timer
    {% endfor %}

    RESUME_BASE {get_params}
    SET_LED LED=neo RED=1 GREEN=1 BLUE=1 TRANSMIT=1

[gcode_macro _PRINTER_TEMP_VARIABLE]
description: Setzt intern verwendete Printervariablen
### Druckdaten
variable_print_temp_extruder: 0.0
variable_print_temp_bed: 0.0

gcode:
