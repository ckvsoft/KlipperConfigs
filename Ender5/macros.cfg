# GCode Macros
[delayed_gcode setdisplayneopixel]
initial_duration: 2
gcode:
    {% for count in range(printer["neopixel neo"].color_data|length) %}
        SET_LED LED=neo RED=1 GREEN=0 BLUE=0 INDEX={count +1}
        G4 P50
    {% endfor %}
    SET_LED LED=neo RED=1 GREEN=0 BLUE=0
    G4 P200
    SET_LED LED=neo RED=0 GREEN=1 BLUE=0
    G4 P200
    SET_LED LED=neo RED=0 GREEN=0 BLUE=1
    G4 P200
    SET_LED LED=neo RED=1 GREEN=1 BLUE=1

# Temperature reactive Neopixel using extruder actual temp...
[gcode_macro templedcolor_timer]
gcode:
  {% if printer.extruder.target|int > 0 %}
    {% if printer.extruder.temperature < printer.extruder.target %}
      #M117 ciclico...
      #M118 ciclico... 
      {% set rosso = (printer.extruder.temperature / printer.extruder.target)|round(2) %}
      {% set blu = (1-(printer.extruder.temperature / printer.extruder.target))|round(2) %}
      #M117 rosso={rosso} blu={blu }
      #M118 rosso={rosso} blu ={blu }
      SET_LED LED=neo RED={rosso} GREEN=0 BLUE={blu}
      G4 P500
    #{% else %}
      #M117 Fine ciclo...
      #M118 Fine ciclo...
    {% endif %}  
  {% else %}
    m118 extrusore spento...
  {% endif %}

[gcode_macro START_PRINT]
### cura startcode: start_print B={material_bed_temperature_layer_0} H={material_print_temperature_layer_0}
gcode:
    M104 S{ params.H } ; set extruder temp
    M140 S{ params.B } ; wait for bed temp
    {% for count in range(1200) %}
        templedcolor_timer
    {% endfor %}
    M190 S{params.B} ###just for security we wait again.....
    M109 S{params.H} ###just for security we wait again.....
    G28 ;Home
    G29 ;Leveling

    G92 E0 ;Reset Extruder
    G1 Z2.0 F3000 ;Move Z Axis up
    SET_LED LED=neo RED=1 GREEN=1 BLUE=1 TRANSMIT=1

[gcode_macro END_PRINT]
gcode:
    G91 ;Relative positioning
    G1 E-2 F2700 ;Retract a bit
    G1 E-2 Z0.2 F2400 ;Retract and raise Z
    G1 X5 Y5 F3000 ;Wipe out
    G1 Z10 ;Raise Z more
    G90 ;Absolute positionning

    G1 X0 Y0 ;Present print
    M106 S0 ;Turn-off fan
    M104 S0 ;Turn-off hotend
    M140 S0 ;Turn-off bed

    M84 X Y E ;Disable all steppers but Z
    SET_LED LED=neo RED=0 GREEN=1 BLUE=0 TRANSMIT=1

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    G91 ;Relative positioning
    G1 F1000 Z15
    G90 ;Absolute positionning
    G1 X0 Y0 ;Present print
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT
    SET_LED LED=neo RED=1 GREEN=0.5 BLUE=0

[gcode_macro LOAD_FILAMENT]
gcode:
    G91
    G1 E50 F500
    G1 E50 F500
    G92

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91
    G1 E-50 F500
    G1 E-50 F500
    G92

[gcode_macro PROBE_CALIBRATE]
rename_existing: BASE_PROBE_CALIBRATE
gcode:  
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28							#Home All Axes
	{% endif %}
    G1 X105 Y90
    BASE_PROBE_CALIBRATE

# Bed Level
[gcode_macro G29]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28							#Home All Axes
	{% endif %}
    BED_MESH_CALIBRATE

[gcode_macro M105]
rename_existing:            M105.1
gcode:  

   M105.1
#  {action_respond_info("M105 called : %.1f" % (printer.extruder.temperature|float))}
#   #if the extruder is off
   {% if printer.extruder.target > 0 %}
         #if the extruder temp is at target temperature 
         {% if printer.extruder.temperature >= printer.extruder.target - 1.0 %}
            #SET_LED LED=neo RED=1 GREEN=0 BLUE=0 TRANSMIT=1

         #if the extruder is still heating
         {% else %}
            {% set scaler = printer.extruder.temperature|float / printer.extruder.target|float %}
            SET_LED LED=neo RED={ scaler|float * 1 } GREEN=0 BLUE={1.0 - scaler|float * 1 } TRANSMIT=1
            G4 P200
         {% endif %}  

   {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro M205]
gcode:
    G4
