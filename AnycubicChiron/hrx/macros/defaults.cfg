# GCode Macros
[gcode_macro TEST]
gcode:
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    {action_respond_info("max= : %s" % (max_velocity))}

[respond]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(0) %}      #edit to your park position
    {% set y = params.Y|default(0) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    {% set e_temp = printer['gcode_macro _PRINTER_TEMP_VARIABLE'].print_temp_extruder %}
    {% set b_temp = printer['gcode_macro _PRINTER_TEMP_VARIABLE'].print_temp_bed %}
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      # G1 X{x} Y{y} F6000
      G1 X{x} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  

    {% if printer['extruder'].target == 0 %}
        {% set e_temp = printer['gcode_macro _PRINTER_TEMP_VARIABLE'].print_temp_extruder %}

        M104 S{ e_temp } ; set extruder temp
        {action_respond_info("Set extruder temperature to %d ..." % e_temp)}

        {% for count in range(1200) %}
            _templedcolor_timer
        {% endfor %}
    {% endif %}

    RESUME_BASE {get_params}
    SET_LED LED=neo RED=1 GREEN=1 BLUE=1 TRANSMIT=1

    [gcode_macro LOAD_FILAMENT]
gcode:
    G91
    G1 E50 F500
    G1 E50 F500
    G92

[gcode_macro LOAD_FILAMENT_TPU]
gcode:
    G91
    G1 E20 F120
    G92

[gcode_macro UNLOAD_FILAMENT]
gcode:
    G91
    G1 E-50 F500
    G1 E-50 F500
    G92

[gcode_macro _PRINTER_TEMP_VARIABLE]
description: Setzt intern verwendete Printervariablen
### Druckdaten
variable_print_temp_extruder: 0.0
variable_print_temp_bed: 0.0

gcode:

[gcode_macro PROBE_CALIBRATE]
rename_existing: BASE_PROBE_CALIBRATE
gcode:  
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28							#Home All Axes
	{% endif %}
    G1 X237 Y200
    BASE_PROBE_CALIBRATE

[gcode_macro G28]
rename_existing: G28.1
gcode:
    {% set HOME_CUR = 0.500 %}
    {% set driver_config = printer.configfile.settings['tmc2209 stepper_y'] %}
    {% set RUN_CUR = driver_config.run_current %}
    {% set HOLD_CUR = driver_config.hold_current %}
    # Set current for sensorless homing
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR} HOLDCURRENT={HOME_CUR}
    # Pause to ensure driver stall flag is clear
    G4 P2000
    # Home
    G28.1
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR} HOLDCURRENT={HOLD_CUR}

# Bed Level
[gcode_macro G29]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28							#Home All Axes
	{% endif %}
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE LOAD=default

[gcode_macro M205]
gcode:
    G4